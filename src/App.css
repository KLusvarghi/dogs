@import url('https://fonts.googleapis.com/css2?family=Spectral:wght@700&display=swap');

 * {
  box-sizing: border-box;
 }

 body {
  /* depois de definir um valor apdrão no body, colocamos uma valor de paddin-top para os itens que ficaram atrás do 'nav' irem para baixo */
  padding-top: 4rem;
  margin: 0px;
  color: #333;
  --type-first: Helvetica, Arial, sans-serif;
  --type-secound: 'Spectral', georgia;
  font-family: var(--type-first);
 }

 h1, h2, h3, h4, p {
  margin: 0px;
 }
 
 a {
  text-decoration: none;
  color: #333;
 }

 ul, li {
  list-style: none;
  padding: 0px;
  margin: 0px;
 }

 img {
  display: block;
  max-width: 100%; /* Assim ela espante até o tamanho toral da tela ou do cntainer que segura ela */
 }
 button, input {
  display: block;
  font-size: 1rem;
  font-family: var(--type-first);
  color: #333;
 }

 /* Será o item que irá segurar boa parte do conteúdo */
 .container {
  max-width: 50rem; /* que é igual a 800px */
  padding: 0 1rem;
  margin: 0 auto; /* para alinha ao centro */
 }

 .mainContainer {
  margin-top: 2rem;
 }


 .title {
  font-family: var(--type-secound);
  line-height: 1;
  font-size: 3rem;
  margin: 1rem 0;
  position: relative; /* Porqueiremos colcoar um item sobre ele */
  z-index: 1; /* Para garantir que ele fique a frente do marcador*/
 }

.title::after {
  content: '';
  display: block;
  width: 1.5rem;
  height: 1.5rem;
  background:  #fb1;
  position: absolute;
  bottom: 5px;
  left: -5px;
  border-radius: 0.2rem;
  z-index: -1; /* Para ficar atrás do title*/
}



.animeLeft {
  opacity: 0;
  transform: translateX(-20px); /* Sendo o estado inicial dele */ 
  opacity: initial;
  animation: animeLeft .3s forwards; /* o forwads que fdizer que ele vai terminar com o estado final da animação e só, não fará mais nada após isso*/
}

@keyframes animeLeft {
  to {
    opacity: 1;
    transform: initial;
  }
}

/* para que ao carregar a página o footer não fique aparecendo vamos definir valores padrões  */

.App {
  display: flex;
  flex-direction: column;
  /* tendo um minimo de altura do tamanho total da tela mais 10rem que é o tamanho definido no css para corpo */
  min-height: calc(100vh + 10rem);
}

.AppBody {
  flex: 1; /* Assim ele irá se expandir ao máximo que der*/
}


/* falando com o gráfico */

/* por padrão ele da um heigth de 100%, isso impede que conseguimos centralizar ele, indo no inpecionar ele da uma classe */

.VictoryContainer {
  height: initial !important;
}